@model List<KazanlakRun.Data.Models.Role>

@{
    ViewData["Title"] = "Roles of Volunteers";
}

<h2>@ViewData["Title"]</h2>

<form asp-area="Admin"
      asp-controller="Role"
      asp-action="SaveAll"
      method="post">
    @Html.AntiForgeryToken()
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>
                        @Model[i].Id
                        <input type="hidden" name="roles[@i].Id" value="@Model[i].Id" />
                    </td>
                    <td class="editable">
                        <span>@Model[i].Name</span>
                        <input type="hidden" name="roles[@i].Name" value="@Model[i].Name" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger"
                                onclick="removeRow(this)">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" onclick="addRow()" class="btn btn-success">
        Add Row
    </button>
    <button type="submit" class="btn btn-primary">
        Save All
    </button>
</form>

@section Scripts {
    <script>
        // Инлайн редакция при двойно кликване
        function makeEditable() {
            document.querySelectorAll('.editable').forEach(cell => {
                const span = cell.querySelector('span');
                const hiddenInput = cell.querySelector('input[type=hidden]');
                span.addEventListener('dblclick', function () {
                    const input = document.createElement('input');
                    input.value = span.textContent.trim();
                    input.onblur = () => {
                        span.textContent = input.value;
                        hiddenInput.value = input.value;
                        cell.removeChild(input);
                        span.style.display = '';
                    };
                    span.style.display = 'none';
                    cell.insertBefore(input, span);
                    input.focus();
                });
            });
        }

        // Добавяне на нов ред
        function addRow() {
            const tbody = document.getElementById('tableBody');
            const index = tbody.children.length;
            const tr = document.createElement('tr');
            tr.innerHTML = `
                    <td>0
                        <input type="hidden" name="roles[${index}].Id" value="0" />
                    </td>
                    <td class="editable">
                        <span>New Role</span>
                        <input type="hidden" name="roles[${index}].Name" value="New Role" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger"
                                onclick="removeRow(this)">Delete</button>
                    </td>`;
            tbody.appendChild(tr);
            makeEditable();
        }

        // Изтриване на ред
        function removeRow(btn) {
            const row = btn.closest('tr');
            row.parentNode.removeChild(row);
        }

        // Инициализация
        document.addEventListener('DOMContentLoaded', makeEditable);
    </script>
}
