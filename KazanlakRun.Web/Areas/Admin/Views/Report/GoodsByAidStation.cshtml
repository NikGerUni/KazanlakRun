@model List<KazanlakRun.Web.Areas.Admin.Models.AidStationGoodsReportViewModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Goods Consumption by Aid Station";
}
<style>
    @@media print {
        .no-print {
            display: none !important;
        }

        table {
            page-break-after: auto;
        }

        tr {
            page-break-inside: avoid;
            page-break-after: auto;
        }

        td {
            page-break-inside: avoid;
            page-break-after: auto;
        }
    }
</style>

<h1>📊 Goods Consumption per Aid Station</h1>

<div class="no-print mb-3">
    <label for="filterInput" class="form-label">Filter Stations:</label>
    <input id="filterInput" type="text" class="form-control" placeholder="Type to filter by station name..." />
</div>

<div id="stationsContainer">
    @foreach (var station in Model)
    {
        <div class="station-block">
            <h2 class="mt-4">
                @station.AidStationName
                <small class="text-muted">(Total runners: @station.TotalRegisteredRunners)</small>
            </h2>
            <table class="table table-bordered table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Measure</th>
                        <th class="text-end">Qty per Station</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var g in station.Goods)
                    {
                        <tr>
                            <td>@g.Name</td>
                            <td>@g.Measure</td>
                            <td class="text-end">@g.QuantityPerAidStation</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        (function () {
            var input = document.getElementById('filterInput');
            var container = document.getElementById('stationsContainer');
            if (!input || !container) return;
            input.addEventListener('input', function () {
                var filter = input.value.trim().toLowerCase();
                var blocks = container.querySelectorAll('.station-block');
                blocks.forEach(function (block) {
                    var header = block.querySelector('h2');
                    var text = header ? header.textContent.toLowerCase() : '';
                    block.style.display = text.indexOf(filter) !== -1 ? '' : 'none';
                });
            });
        })();
    </script>
}
